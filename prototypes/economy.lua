---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 3/29/2025 1:32 PM
---

if not mods['space-age'] then
    return
end

local Organs = require('__erm_redarmy__/prototypes/create-organs')

local organ_color = {r=0.533,g=0.031,b=0.031,a=1}
local organ_name = MOD_NAME..'--organ'
--- Create recipe category and subgroup
Organs.init()
--- Create crystal item
Organs.create_item(organ_name)

--- Create organ duplication recipe
Organs.create_organ_duplication_recipe(organ_name, {
    {type = "item", name = "nutrients", amount = 50},
    {type = "item", name = "raw-fish", amount = 2},
    {type = "fluid", name = "water", amount = 200},
},organ_color)

--- Create organ to biter egg recipe
Organs.create_organ_to_biter_egg_recipe(organ_name, {
    {type = "item", name = "bioflux", amount = 10},
    {type = "item", name = "pentapod-egg", amount = 2},
    {type = "item", name = "nutrients", amount = 50},
    {type = "fluid", name = "water", amount = 200},
}, organ_color)

Organs.create_organ_to_nutrients_recipe(organ_name, 35, organ_color)
Organs.create_organ_to_military_recipe(organ_name, organ_color)
Organs.create_organ_to_promethium_recipe(organ_name)
Organs.create_tech(organ_name)


--- Assign organs to applicable spawners as loot
local lootable_spawners = {
    'lab'
}

local loot_multiplier = {
    [2] = {1,1},
    [3] = {2,3},
    [4] = {3,5},
    [5] = {4,6},
}

for _, spawner in pairs(lootable_spawners) do
    for tier, multiplier in pairs(loot_multiplier) do
        local unit_prototype = data.raw['unit-spawner'][MOD_NAME..'--'..spawner..'--'..tier]
        if unit_prototype then
            unit_prototype.loot = {
                {item = organ_name, count_min = multiplier[1], count_max = multiplier[2] }
            }
        end
    end
end

--- The following spanwers have 33% to drop loots
local lootable_spawner_with_probablity = {
    'furnace', 'assembling-machine'
}

local loot_multiplier_with_probablity = {
    [2] = {1,1},
    [3] = {2,3},
    [4] = {3,5},
    [5] = {4,6},
}

for _, spawner in pairs(lootable_spawner_with_probablity) do
    for tier, multiplier in pairs(loot_multiplier_with_probablity) do
        local unit_prototype = data.raw['unit-spawner'][MOD_NAME..'--'..spawner..'--'..tier]
        if unit_prototype then
            unit_prototype.loot = {
                {item = organ_name, probability = 0.33, count_min = multiplier[1], count_max = multiplier[2] }
            }
        end
    end
end
